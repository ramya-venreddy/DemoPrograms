public class QueueL<T> implements Queue<T>{    private int counter;    private Node<T> head, tail;    public QueueL()    {        counter = 0;        head = tail = null;    }    public void enqueue(T element)    {        Node<T> node = new Node<T>(element);        if (isEmpty())            head = node;        else            tail.setNext(node);        tail = node;        counter++;    }    public T dequeue()     {        if (isEmpty())            System.out.println("The List is Empty");        T result = head.getElement();        head = head.getNext();        counter--;        if (isEmpty())            tail = null;        return result;    }        public T first()     {            	if (isEmpty())            System.out.println("The list is empty");         return head.getElement();    }    public boolean isEmpty()    {           	return (counter == 0);    }       public int size()    {            	return counter;    }       public String toString()    {            	String nodes = "";        Node<T> currentNode = head;        while (currentNode != null)        {           nodes = nodes + (currentNode.getElement()).toString() + "\n";           currentNode = currentNode.getNext();        }        return nodes;    }}